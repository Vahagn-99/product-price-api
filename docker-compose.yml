services:
  app:
    build:
      args:
        UID: "${UID:-1000}"
        GID: "${GID:-1000}"
        TZ: "${TZ:-UTC}"
      context: ./_docker/app
      dockerfile: Dockerfile
    tty: true
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./_docker/app/php.ini:/usr/local/etc/php/php.ini
    networks:
      - app-network
      - db-network
      - cache-network
    depends_on:
      db:
         condition: service_healthy
      cache:
          condition: service_healthy

  webserver:
    image: "nginx:stable-alpine3.21-slim"
    tty: true
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./:/var/www
      - ./_docker/webserver/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./_docker/webserver/log:/var/log/nginx
    networks:
      - webserver-network
      - app-network
    depends_on:
      - app

  db:
    image: mysql:9.2
    tty: true
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
    ports:
      - "${DB_FORWARD_PORT:-3306}:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./_docker/db/init:/docker-entrypoint-initdb.d
    networks:
      - db-network

  cache:
    image: redis:8-alpine3.21
    tty: true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    ports:
      - "${REDIS_CACHE_QUEUE_PORT:-6379}:6379"
    volumes:
      - cache_data:/data
    networks:
      - cache-network

networks:
  app-network:
    driver: bridge
  webserver-network:
    driver: bridge
  db-network:
    driver: bridge
  cache-network:
    driver: bridge

volumes:
  db_data:
  cache_data:
